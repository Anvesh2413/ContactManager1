{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","Axios","get","then","res","data","value","this","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","delete","name","email","phone","className","onClick","style","cursor","float","color","onDeleteClick","bind","to","marginRight","Contacts","Fragment","key","Header","branding","href","About","NotFound","TextInputGroup","label","placeholder","onChange","htmlFor","required","prototypes","PropTypes","string","isRequired","func","defaultProps","AddContact","e","target","onSubmit","preventDefault","newContact","axios","post","history","push","EditContact","match","params","updContact","put","Test","title","body","fetch","response","json","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.95c42861.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return { state };\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n\r\n    dispatch: (action) => this.setState((state) => reducer(state, action)),\r\n  };\r\n\r\n  componentDidMount() {\r\n    Axios.get(\"https://jsonplaceholder.typicode.com/users\").then((res) =>\r\n      this.setState({ contacts: res.data })\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport Axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: true,\r\n  };\r\n\r\n  onShowClick = () => {\r\n    this.setState({ showContactInfo: !this.state.showContactInfo });\r\n  };\r\n\r\n  onDeleteClick(id, dispatch) {\r\n    Axios.delete(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    ).then((res) => dispatch({ type: \"DELETE_CONTACT\", payload: id }));\r\n  }\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{\" \"}\r\n                <i\r\n                  onClick={this.onShowClick}\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      marginRight: \"16px\",\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {this.state.showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email : {email}</li>\r\n                  <li className=\"list-group-item\">Mobile: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { contacts } = value;\r\n\r\n          return (\r\n            <React.Fragment>\r\n              <div className=\"display-4 mb-2\">\r\n                <h1 className=\"text-danger\">Contact List</h1>\r\n              </div>\r\n              {contacts.map((contact) => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\"></i> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\"></i> Add Contact\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\"></i>About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager Application</h1>\r\n      <p className=\"lead\">Simple Application to Manage Contacts</p>\r\n      <p className=\"text-secondary\">version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">Page Not Found</h1>\r\n      <p className=\"lead\">Sorry, This Page is Not Available</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        className=\"form-control form-control-lg\"\r\n        type={type}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n        required\r\n      />\r\n    </div>\r\n  );\r\n};\r\nTextInputGroup.prototypes = {\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\",\r\n};\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n  };\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n\r\n    axios\r\n      .post(\"https://jsonplaceholder.typicode.com/users\", newContact)\r\n      .then((res) => dispatch({ type: \"ADD_CONTACT\", payload: res.data }));\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    name=\"name\"\r\n                    label=\"Name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <TextInputGroup\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    type=\"email\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <TextInputGroup\r\n                    name=\"phone\"\r\n                    label=\"Mobile\"\r\n                    placeholder=\"Enter Contact Number\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                  />\r\n\r\n                  <input\r\n                    className=\"btn btn-light btn-block\"\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n  };\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const contact = (await res).data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone,\r\n    });\r\n  }\r\n\r\n  onSubmit = (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    const { id } = this.props.match.params;\r\n    const updContact = { name, email, phone };\r\n    axios\r\n      .put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact)\r\n      .then((res) => dispatch({ type: \"UPDATE_CONTACT\", payload: res.data }));\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    name=\"name\"\r\n                    label=\"Name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <TextInputGroup\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    type=\"email\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <TextInputGroup\r\n                    name=\"phone\"\r\n                    label=\"Mobile\"\r\n                    placeholder=\"Enter Contact Number\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                  />\r\n\r\n                  <input\r\n                    className=\"btn btn-light btn-block\"\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default EditContact;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    body: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/todos/1\")\r\n      .then((response) => response.json())\r\n      .then((data) => this.setState({ title: data.title, body: data.body }));\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Test Component</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"./context\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Test from \"./components/test/Test\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}